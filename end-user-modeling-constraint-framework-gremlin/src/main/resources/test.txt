graphSource.instance(instanceElementGraph.get(0).getUuid()).and(__.has("salary", P.gt("10")), __.out().out().has("name", "Implementation process")).elementMap().toList()

returns one element, so it is working

graphSource
                .instance(instanceElementGraph.get(0).getUuid()).forAll(List.of("works_on", "consists_of"),  __.minLengthOrEquals("name", 14))
                .next() -> true

graphSource
                .instance(instanceElementGraph.get(0).getUuid()).forAll(List.of("works_on", "consists_of"),  __.minLength("name", 14))
                .next() -> false // because Design process has 14 characters

false -> graphSource.instance(instanceElementGraph.get(0).getUuid()).forAll(List.of("works_on", "consists_of"), __.minLength("name", 15)).next();
true -> graphSource.instance(instanceElementGraph.get(0).getUuid()).forSome(List.of("works_on", "consists_of"), __.minLength("name", 15)).next();
true -> graphSource.instance(instanceElementGraph.get(0).getUuid()).forNone(List.of("works_on", "consists_of"), __.minLength("name", 50)).next();
true -> graphSource.instance(instanceElementGraph.get(0).getUuid()).or(List.of(__.minLength("name", 5), __.lessThan("age", 10))).next();